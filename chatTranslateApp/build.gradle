plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tigerpms'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	// OS 확인
	def isWindows = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')

	// NPM 경로 동적 설정
	def npmCommand = System.getenv("NVM_BIN") ? System.getenv("NVM_BIN") + "/npm" : (isWindows ? "npm.cmd" : "npm")

	// 명령 실행
	commandLine npmCommand, "install"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	// OS 확인
	def isWindows = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')

	// NPM 경로 동적 설정
	def npmCommand = System.getenv("NVM_BIN") ? System.getenv("NVM_BIN") + "/npm" : (isWindows ? "npm.cmd" : "npm")
	commandLine npmCommand, "run-script", "build"
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}

task installPythonDependencies(type: Exec) {
	commandLine "pip", "install", "-r", "src/main/python/requirements.txt"
}

bootRun {
	dependsOn installPythonDependencies
}
